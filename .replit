modules = ["python-3.11", "postgresql-16", "python3"]

[nix]
channel = "stable-24_05"
packages = ["cargo", "iana-etc", "libiconv", "libxcrypt", "openssl", "pkg-config", "postgresql", "rustc"]

[deployment]
deploymentTarget = "autoscale"
run = ["sh", "-c", "python main.py --port 5000"]

[workflows]
runButton = "Production Server"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "install_dependencies"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[[workflows.workflow]]
name = "install_dependencies"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "uv add flask-socketio flask-cors requests"

[[workflows.workflow]]
name = "Run"
mode = "sequential"
author = 39922616

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Development Server"
author = 39922616
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Production Server"
author = 39922616
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py --port 5000"

[[ports]]
localPort = 5000
externalPort = 80
